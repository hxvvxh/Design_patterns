享元模式
是池技术的重要实现方式：使用共享对象可有效地支持大量的细粒度的对象

享元模式的定义为我们提出了两个要求：细粒度的对象和共享对象。我们知道分配太多的对象到应用程序中将有损程序的性能，
同时还容易造成内存溢出，那怎么避免呢？就是享元模式提到的共享技术。我们先来了解一下对象的内部状态和外部状态。
　　要求细粒度对象，那么不可避免地使得对象数量多且性质相近，
那我们就将这些对象的信息分为两个部分：内部状态（intrinsic）与外部状态（extrinsic）。
内部状态
内部状态是对象可共享出来的信息，存储在享元对象内部并且不会随环境改变而改变，它们可以作为一个对象的动态附加信息，不必直接储存在具体某个对象中，属于可以共享的部分。
外部状态
外部状态是对象得以依赖的一个标记，是随环境改变而改变的、不可以共享的状态。


顺序：
Flyweight
ConcreteFlyweight
ConcreteFlyweight2
FlyweightFactory